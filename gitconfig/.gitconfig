[alias]
	l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --abbrev-commit --date=local
	lol = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white) - %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
	lf = log --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(bold yellow)%d%C(reset) %C(white)%s%C(reset) %C(bold white) - %an%C(reset)' --abbrev-commit --date=relative
	rprettier = rebase --strategy-option=theirs --exec 'npx prettier --write `git show --name-only --pretty="" HEAD` && git add `git show --name-only --pretty="" HEAD` && git commit --amend --no-edit' main
	st = status -sb
	stat = status
	sh = stash
	sha = stash apply
	cp = cherry-pick
	cpf = cherry-pick -m 1
	co = checkout
	cm = checkout main
	cmr = !git checkout main && git pr
	pf = pull --ff-only
	pr = pull --rebase --prune
	rmo = remote -v
	br = branch
	brr = branch --remote
	rsh = reset --hard
	cl = clean -fdx -e 'node_modules'
	su = submodule update
	tf = tfs fetch
	tp = tfs pull --rebase
	ci = commit
	cia = commit --amend
	cin = commit --no-verify
	lg = log -p
	ra = rebase --abort
	rc = rebase --continue
	ri = rebase -i
	standup = log --since 'last monday' --oneline --author 'brandon.pugh@headspring.com'
	stand = "!git log --reverse --branches --since=$(if [[ Mon == $(date +%a) ]]; then echo last friday; else echo yesterday; fi) --author=$(git config --get user.email) --format=format:'%C(cyan) %ad %C(yellow)%h %Creset %s %Cgreen%d' --date=local"
	alias = config --get-regexp alias
	unstage = reset HEAD
	mf = merge --no-ff
	please = push --force-with-lease
	wip = commit --no-verify -am "WIP"
	wipe = !git add -u && git commit --no-verify -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
	rbm = !git co main && git pr && git co - && git rebase main
	rem = rebase main
	undo = reset HEAD~1 --mixed
	be = rev-list --left-right --count origin/main...@
	fr = !git fetch && git rebase origin/main
	db = "!for branch in `git branch -vv | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done"
	exec = "!exec "
	rb = !git fetch && git rebase origin/main
	set-upstream = !git push --set-upstream origin `git symbolic-ref --short HEAD`
[color]
	branch = auto
	diff = auto
	interactive = auto
	status = auto
[core]
	autocrlf = true
	excludesfile = ~/.gitignore_global
	# editor = code --wait
[diff]
	tool = bc3
	guitool = beyondcompare3
[difftool "bc3"]
	path = c:/program files/beyond compare 4/bcomp.exe
[credential]
	helper = manager
[push]
	default = upstream
[merge]
	tool = bc3
[mergetool "bc3"]
	path = c:/program files (x86)/beyond compare 4/bcomp.exe
[branch]
	autosetuprebase = always
[gc]
	autoDetach = false
[pull]
	rebase = true
[difftool "bc"]
	path = c:/Program Files/Beyond Compare 4/bcomp.exe
[rerere]
	enabled = true
[fetch]
	prune = false
[rebase]
	autoStash = false
	autosquash = true
